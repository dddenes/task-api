[tool.poetry]
name = "task_api"
version = "0.1.0"
description = "Async Task Management API with Background Processing"
authors = ["DÃ©nes Surman <surmandenes@yahoo.com>"]
license = "MIT"

[tool.poetry.dependencies]
alembic = "^1.16.1"
asyncpg = "^0.30.0"
fastapi = "^0.115.12"
fastapi-pagination = "^0.13.1"
pydantic = "^2.11.5"
python = "^3.12.3"
python-dotenv = "^1.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.41"}
uvicorn = {extras = ["standard"], version = "^0.34.3"}

[tool.poetry.group.dev.dependencies]
httpx = "^0.28.1"
pytest = "^8.4.0"
pytest-asyncio = "^1.0.0"
aiosqlite = "^0.21.0"
pylint = "^3.3.4"
pytest-cov = "^6.0.0"

[tool.pylint.master]
ignore-paths = '^alembic/.*$'

[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.Exception"]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    "abstract-method",
    "bad-inline-option",
    "bad-mcs-method-argument",
    "broad-exception-caught",
    "cyclic-import",
    "dangerous-default-value",
    "deprecated-pragma",
    "file-ignored",
    "fixme",
    "import-outside-toplevel",
    "invalid-metaclass",
    "invalid-name",
    "locally-disabled",
    "logging-fstring-interpolation",
    "no-member",
    "raw-checker-failed",
    "redefined-outer-name",
    "suppressed-message",
    "too-few-public-methods",
    "unsubscriptable-object",
    "unused-argument",
    "use-symbolic-message-instead",
    "useless-suppression",
]
